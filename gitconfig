[user]
  name = Dustin Younse
  email = milsyobtaf@gmail.com
[github]
  user = milsyobtaf
[alias]
# add
  add = add --all    # add all, including removals
# branch
	branch = branch -v		# branch (verbose)
# commit
	c = commit -m			# commit with message
	ca = commit -am			# commit all with message
# list branches by date
  latest = for-each-ref --sort=-committerdate refs/heads --format='%(color:green)%(committerdate:short) - %(color:white)%(refname:short)'
# status
	s = status -sb			# status
	st = status -sb			# status
	stat = remote update		# update remote status
# assume a file so it  can be ignored temporarily
	assume   = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed  = "!git ls-files -v | grep ^h | cut -c 3-"
# remote
  r = remote -v                     # show remotes (verbose)
# reset
  unstage = reset HEAD              # remove files from index (tracking)
  uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
  filelog = log -u                  # show changes to a file
  mt = mergetool                    # fire up the merge tool
  dt = difftool                     # fire up the diff tool
# log
  log = --pretty=
# git alias finder, from http://brettterpstra.com/2014/08/04/shell-tricks-one-git-alias-to-rule-them-all/
  finda = "!grepalias() { git config --global --get-regexp alias | grep -i \"$1\" | awk -v nr=2 '{sub(/^alias\\./,\"\")};{printf \"\\033[31m%_10s\\033[1;37m\", $1};{sep=FS};{for (x=nr; x<=NF; x++) {printf \"%s%s\", sep, $x; }; print \"\\033[0;39m\"}'; }; grepalias"
[color]
	# Use colors in Git commands that are capable of colored output when outputting to the terminal
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = cyan
[color "diff"]
	meta = blue bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = cyan
	changed = yellow
	untracked = red
[format]
  pretty = format:%Cred%h%Creset %C(bold blue)<%an>%Creset %Cgreen(%cr) -%C(yellow)%d%Creset %s %Creset
[core]
	excludesfile = ~/.gitignore_global
[diff]
  tool = sublimerge
  algorithm = patience
[difftool "sublimerge"]
  cmd = subl -n --wait \"$REMOTE\" \"$LOCAL\" --command \"sublimerge_diff_views {\\\"left_read_only\\\": true, \\\"right_read_only\\\": true}\"
  prompt = false
[merge]
  tool = sublimerge
[mergetool "sublimerge"]
  cmd = subl -n --wait \"$REMOTE\" \"$BASE\" \"$LOCAL\" \"$MERGED\" --command \"sublimerge_diff_views\"
  trustExitCode = false
