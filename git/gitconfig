[user]
  name = Dustin Younse
  email = milsyobtaf@gmail.com
#  signingkey = BEE90EAF
[commit]
#  gpgsign = true
[github]
  user = milsyobtaf
[alias]
# add
  add = add --all    # add all, including removals
# branch
  branch = branch -v --sort=-committerdate    # branch (verbose output, sorted by most recently used)
# commit
#  c = commit -S -v      # commit with message
#  ca = commit -S -av      # commit all with message
   c = commit -v # commit with message
   ca = commit -av # commit all with message
# list branches by date
  latest = for-each-ref --sort=-committerdate refs/heads --format='%(color:green)%(committerdate:short) - %(color:white)%(refname:short)'
# force push, nicely
  pushf = push --force-with-lease
# status
  s = status -sb      # status
  st = status -sb      # status
  stat = remote update    # update remote status
# assume a file so it  can be ignored temporarily
  assume   = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  assumed  = "!git ls-files -v | grep ^h | cut -c 3-"
# remote
  r = remote -v                     # show remotes (verbose)
# reset
  unstage = reset HEAD              # remove files from index (tracking)
  uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
# tools
  filelog = log -u                  # show changes to a file
  mt = mergetool                    # fire up the merge tool
  dt = difftool                     # fire up Kaleidoscope diff
  diffwords = diff --color-words
# log
  lg = log --color --graph -50 --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
# git alias finder, from http://brettterpstra.com/2014/08/04/shell-tricks-one-git-alias-to-rule-them-all/
  finda = "!grepalias() { git config --global --get-regexp alias | grep -i \"$1\" | awk -v nr=2 '{sub(/^alias\\./,\"\")};{printf \"\\033[31m%_10s\\033[1;37m\", $1};{sep=FS};{for (x=nr; x<=NF; x++) {printf \"%s%s\", sep, $x; }; print \"\\033[0;39m\"}'; }; grepalias"
[color]
# Use colors in Git commands that are capable of colored output when outputting to the terminal
  ui = auto 
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = cyan
[color "diff"]
  meta = blue bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = cyan
  changed = yellow
  untracked = red
[color "diff-highlight"]
  oldNormal = "red bold"
  oldHighlight = "red bold 52"
  newNormal = "green bold"
  newHighlight = "green bold 22"
[format]
  pretty = format:%Cred%h%Creset %C(bold blue)<%an>%Creset %Cgreen(%cr) %C(yellow)%d%Creset %n%C(bold white)%s%Creset %Creset %n%b
[core]
  excludesfile = ~/.gitignore_global
  pager = "diff-so-fancy | less --tabs=1,5 -RFX"
[diff]
  tool = Kaleidoscope
  algorithm = patience
[difftool "Kaleidoscope"]
  cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool]
  prompt = false
[merge]
  tool = Kaleidoscope
[mergetool]
  prompt = false
  keepBackup = false
[mergetool "Kaleidoscope"]
  cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" \"$REMOTE\"
[push]
  default = simple
[filter "lfs"]
  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
[branch]
  autosetuprebase = always
